@model ShoppingCartVM
<!-- breadcrumb -->
<div class="container mt-5">
    <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
        <a href="index.html" class="stext-109 cl8 hov-cl1 trans-04">
            Home
            <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
        </a>

        <span class="stext-109 cl4">
            Check Out
        </span>
    </div>
</div>

<!-- Shoping Cart -->
<form class="bg0 p-t-75 p-b-85" method="post">
	<div class="container">
		<div class="row">
			<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="firstName">FirstName</label>
                        <input type="text" class="form-control" id="firstname" asp-for="@Model.OrderHeader.FirstName"/>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="firstName">LastName</label>
                        <input type="text" class="form-control" id="lastname" asp-for="@Model.OrderHeader.LastName" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="firstName">PhoneNumber</label>
                        <input type="tel" class="form-control" id="phonenumber" asp-for="@Model.OrderHeader.PhoneNumber" />
                        <span asp-validation-for="@Model.OrderHeader.PhoneNumber" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="firstName">Additional Phone</label>
                        <input type="tel" class="form-control" id="phonenumber" asp-for="@Model.OrderHeader.AdditionalPhoneNumber" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" asp-for="@Model.OrderHeader.Address" />
                        <span asp-validation-for="@Model.OrderHeader.Address" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="email">Email <span class="text-muted"></span></label>
                        <input type="email" class="form-control" id="email" asp-for="@Model.OrderHeader.Email"/>
                        <span asp-validation-for="@Model.OrderHeader.Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="address">Additional Information (Notes)</label>
                        <input type="text" class="form-control" id="additionalinformation" asp-for="@Model.OrderHeader.AdditionalInformation"/>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="region">Region</label>
                        <select class="form-control" id="region" asp-for="@Model.OrderHeader.Region">
                            <option value="">Select Region</option>
                        </select>
                        <span asp-validation-for="@Model.OrderHeader.Region" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="city">City</label>
                        <select class="form-control" id="city" asp-for="@Model.OrderHeader.City">
                            <option value="">Select City</option>
                        </select>
                        <span asp-validation-for="@Model.OrderHeader.City" class="text-danger"></span>
                    </div>

                </div>
			</div>
            <div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
                <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
                    <h4 class="mtext-109 cl2 p-b-30">
                        YOUR ORDER
                    </h4>
                    <ul class="list-group mb-3">
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0"><strong>Product Name</strong></h6>
                            </div>
                            <span class="text-muted"><strong>Total Price</strong></span>
                        </li>
                        @foreach (var item in Model.shoppingCarts)
                        {
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div>
                                    <h6 class="my-0">@item.Product.Name</h6>
                                </div>
                                <span class="text-muted">£ @item.Product.Price</span>
                            </li>
                        }
                    </ul>
                    <ul class="list-group mb-3">
                        <li class="list-group-item d-flex justify-content-between">
                            <strong>Shipping fee:</strong> 
                            <strong style="color:#717FE0">£ 50</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <strong>Total (EGP)</strong>
                            <strong style="color:#717FE0">£ @Model.OrderHeader.totalPrice </strong>
                        </li>
                    </ul>
                    <button type="submit" class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15" asp-action="Checkout">
                        Place Order
                    </button>
                </div>
            </div>

		</div>
	</div>
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const regionSelect = document.getElementById("region");
            const citySelect = document.getElementById("city");

            // Fetch JSON data
            fetch('/Fawary.json')
                .then(response => response.json())
                .then(data => {
                    // Populate regions dropdown
                    for (const region of data) {
                        const option = document.createElement("option");
                        option.value = region.namePrimaryLang;
                        option.textContent = region.namePrimaryLang;
                        regionSelect.appendChild(option);
                    }

                    // Set selected region
                    regionSelect.value = "@Model.OrderHeader.Region";

                    // Populate cities dropdown based on selected region
                    populateCities(regionSelect.value, data);

                    // Update cities dropdown when region changes
                    regionSelect.addEventListener("change", function () {
                        populateCities(this.value, data);
                    });

                    function populateCities(selectedRegion, data) {
                        citySelect.innerHTML = '<option value="">Select City</option>'; // Reset city dropdown

                        const regionData = data.find(r => r.namePrimaryLang === selectedRegion);
                        if (regionData && regionData.cityDataModels) {
                            regionData.cityDataModels.forEach(function (city) {
                                const option = document.createElement("option");
                                option.value = city.namePrimaryLang;
                                option.textContent = city.namePrimaryLang;
                                citySelect.appendChild(option);

                                // Check areaDataModels for additional cities
                                if (city.areaDataModels) {
                                    city.areaDataModels.forEach(function (area) {
                                        if (area.namePrimaryLang !== city.namePrimaryLang) {
                                            const areaOption = document.createElement("option");
                                            areaOption.value = area.namePrimaryLang;
                                            areaOption.textContent = area.namePrimaryLang;
                                            citySelect.appendChild(areaOption);
                                        }
                                    });
                                }
                            });

                            // Set selected city
                            citySelect.value = "@Model.OrderHeader.City";
                        }
                    }
                })
                .catch(error => console.error('Error fetching JSON:', error));
        });
    </script>
}