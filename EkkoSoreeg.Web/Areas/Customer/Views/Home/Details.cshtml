@model ShoppingCart
@using X.PagedList.Mvc.Core
@using X.PagedList
<!-- breadcrumb -->
<div class="container mt-5">
	<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
		<a asp-area="Customer" asp-controller="Home" asp-action="Index" class="stext-109 cl8 hov-cl1 trans-04">
			Home
			<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
		</a>

		<a asp-area="Customer" asp-controller="Shop" asp-action="Index" class="stext-109 cl8 hov-cl1 trans-04">
			 Shop
			<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
		</a>

		<span class="stext-109 cl4">
			@Model.Product.Name
		</span>
	</div>
</div>

<partial name="_Toaster" />
<!-- Product Detail -->
<section class="sec-product-detail bg0 p-t-65 p-b-60">
		<div class="container">
			<div class="row">
				<div class="col-md-6 col-lg-7 p-b-30">
					<div class="p-l-25 p-r-30 p-lr-0-lg">
						<div class="wrap-slick3 flex-sb flex-w">
							<div class="wrap-slick3-dots"></div>
							<div class="wrap-slick3-arrows flex-sb-m flex-w"></div>

							<div class="slick3 gallery-lb">
								@foreach (var image in Model.Product.ProductImages)
								{
									<div class="item-slick3" data-thumb="/@image.ImagePath">
										<div class="wrap-pic-w pos-relative">
											<img src="~/@image.ImagePath" alt="IMG-PRODUCT">
										    <a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="~/@image.ImagePath">
												<i class="fa fa-expand"></i>
											</a>
										</div>
									</div>
								}
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6 col-lg-5 p-b-30">
					<div class="p-r-50 p-t-5 p-lr-0-lg">
						<h4 class="mtext-105 cl2 js-name-detail p-b-14">
							@Model.Product.Name
						</h4>
						@if (Model.Product.OfferPrice != 0)
						{
							<span class="mtext-106 cl2">
								EGP <del>@Model.Product.Price</del>
							</span>
							<span class="mtext-106 cl2">
									@Model.Product.OfferPrice
						    </span>
					    }
						else
						{
							<span class="mtext-106 cl2">
								EGP @Model.Product.Price
							</span>
						}
					<p class="stext-102 cl3 p-t-23">
							@Model.Product.Description
						</p>
						<!--  -->
						<div class="p-t-33">
						<div class="flex-w flex-r-m p-b-10">
							<div class="size-203 flex-c-m respon6">
								Size
							</div>
							<div class="size-204 respon6-next">
								<div class="rs1-select2 bor8 bg0">
									<select class="js-select2" id="selectSize" required>
										<option value="" disabled selected>Select Size</option>
										@foreach (var size in Model.Product.ProductSizeMappings.Select(p => p.ProductSize))
										{
											<option value="@size.Id">@size.Name</option>
										}
									</select>
									<div class="dropDownSelect2"></div>
								</div>
							</div>
						</div>

						<div class="flex-w flex-r-m p-b-10">
							<div class="size-203 flex-c-m respon6">
								Color
							</div>
							<div class="size-204 respon6-next">
								<div class="rs1-select2 bor8 bg0">
									<select class="js-select2" id="selectColor">
										<option value="" disabled selected>Select Color</option>
										@foreach (var color in Model.Product.ProductColorMappings.Select(p => p.ProductColor))
										{
											<option value="@color.Id">@color.Name</option>
										}
									</select>
									<div class="dropDownSelect2"></div>
								</div>
							</div>
						</div>
							<div class="flex-w flex-r-m p-b-10">
								<div class="size-204 flex-w flex-m respon6-next">
									<div class="wrap-num-product flex-w m-r-20 m-tb-10">
										<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-minus"></i>
										</div>

									<input class="mtext-104 cl3 txt-center num-product" type="number" name="num-product" value="1">

										<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-plus"></i>
										</div>
									</div>
								@if (Model.Product.Stock != 0)
								{
									<button class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15" onclick="submitForm(event)">
										Add to cart
									</button>
								}
								else
								{
									<button class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15" disabled>
										Out Of Stock
									</button>
								}
							</div>
							</div>
						</div>
					<form id="Details" method="post" asp-action="Details">
						<input type="hidden" asp-for="ProductId" />
						<input type="hidden" id="ProductCount" name="Count" />
						<input type="hidden" id="SelectedSize" name="Size" />
						<input type="hidden" id="SelectedColor" name="Color" />
					</form>
						<!--  -->
						<div class="flex-w flex-m p-l-100 p-t-40 respon7">
							<div class="flex-m bor9 p-r-10 m-r-11">
								<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 js-addwish-detail tooltip100" data-tooltip="Add to Wishlist">
									<i class="zmdi zmdi-favorite"></i>
								</a>
							</div>
						<div class="flex-m bor9 p-r-10 m-r-11">
							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="View on Facebook">
							    <i class="zmdi zmdi-facebook"></i>
							</a>
							</div>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="View on Instgram">
							  <i class="zmdi zmdi-instagram"></i>
							</a>
						</div>
					</div>
				</div>
			</div>
			<div class="bor10 m-t-50 p-t-43 p-b-40">
				<!-- Tab01 -->
				<div class="tab01">
					<!-- Nav tabs -->
					<ul class="nav nav-tabs" role="tablist">
						<li class="nav-item p-b-10">
							<a class="nav-link active" data-toggle="tab" href="#description" role="tab">Description</a>
						</li>

						<li class="nav-item p-b-10">
							<a class="nav-link" data-toggle="tab" href="#information" role="tab">Additional information</a>
						</li>

						<li class="nav-item p-b-10">
							<a class="nav-link" data-toggle="tab" href="#reviews" role="tab">Reviews (1)</a>
						</li>
					</ul>

					<!-- Tab panes -->
					<div class="tab-content p-t-43">
						<!-- - -->
						<div class="tab-pane fade show active" id="description" role="tabpanel">
							<div class="how-pos2 p-lr-15-md">
								<p class="stext-102 cl6">
									@Model.Product.Description
								</p>
							</div>
						</div>

						<!-- - -->
						<div class="tab-pane fade" id="information" role="tabpanel">
							<div class="row">
								<div class="col-sm-10 col-md-8 col-lg-6 m-lr-auto">
									<ul class="p-lr-28 p-lr-15-sm">
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Weight
											</span>

											<span class="stext-102 cl6 size-206">
												0.79 kg
											</span>
										</li>

										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Dimensions
											</span>

											<span class="stext-102 cl6 size-206">
												110 x 33 x 100 cm
											</span>
										</li>

										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Materials
											</span>

											<span class="stext-102 cl6 size-206">
												60% cotton
											</span>
										</li>

										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Color
											</span>
										<span class="stext-102 cl6 size-206">
											@{
												var colors = Model.Product.ProductColorMappings.Select(p => p.ProductColor).ToList();
												for (int i = 0; i < colors.Count; i++)
												{
													@colors[i].Name
													if (i < colors.Count - 1)
													{
														@:,
													}
												}
											}
										</span>
										</li>
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Size
											</span>

											<span class="stext-102 cl6 size-206">
											@{
												var sizes = Model.Product.ProductSizeMappings.Select(p => p.ProductSize).ToList();
												for (int i = 0; i < sizes.Count; i++)
												{
													@sizes[i].Name
													if (i < sizes.Count - 1)
													{
														@:,
													}
												}
											}
											</span>
										</li>
									</ul>
								</div>
							</div>
						</div>

						<!-- - -->
						<div class="tab-pane fade" id="reviews" role="tabpanel">
							<div class="row">
								<div class="col-sm-10 col-md-8 col-lg-6 m-lr-auto">
									<div class="p-b-30 m-lr-15-sm">
										<!-- Review -->
										<div class="flex-w flex-t p-b-68">
											<div class="wrap-pic-s size-109 bor0 of-hidden m-r-18 m-t-6">
												<img src="~/Customer/images/avatar-01.jpg" alt="AVATAR">
											</div>

											<div class="size-207">
												<div class="flex-w flex-sb-m p-b-17">
													<span class="mtext-107 cl2 p-r-20">
														Ariana Grande
													</span>

													<span class="fs-18 cl11">
														<i class="zmdi zmdi-star"></i>
														<i class="zmdi zmdi-star"></i>
														<i class="zmdi zmdi-star"></i>
														<i class="zmdi zmdi-star"></i>
														<i class="zmdi zmdi-star-half"></i>
													</span>
												</div>

												<p class="stext-102 cl6">
													Quod autem in homine praestantissimum atque optimum est, id deseruit. Apud ceteros autem philosophos
												</p>
											</div>
										</div>

										<!-- Add review -->
										<form class="w-full">
											<h5 class="mtext-108 cl2 p-b-7">
												Add a review
											</h5>

											<p class="stext-102 cl6">
												Your email address will not be published. Required fields are marked *
											</p>

											<div class="flex-w flex-m p-t-50 p-b-23">
												<span class="stext-102 cl3 m-r-16">
													Your Rating
												</span>

												<span class="wrap-rating fs-18 cl11 pointer">
													<i class="item-rating pointer zmdi zmdi-star-outline"></i>
													<i class="item-rating pointer zmdi zmdi-star-outline"></i>
													<i class="item-rating pointer zmdi zmdi-star-outline"></i>
													<i class="item-rating pointer zmdi zmdi-star-outline"></i>
													<i class="item-rating pointer zmdi zmdi-star-outline"></i>
													<input class="dis-none" type="number" name="rating">
												</span>
											</div>

											<div class="row p-b-25">
												<div class="col-12 p-b-5">
													<label class="stext-102 cl3" for="review">Your review</label>
													<textarea class="size-110 bor8 stext-102 cl2 p-lr-20 p-tb-10" id="review" name="review"></textarea>
												</div>

												<div class="col-sm-6 p-b-5">
													<label class="stext-102 cl3" for="name">Name</label>
													<input class="size-111 bor8 stext-102 cl2 p-lr-20" id="name" type="text" name="name">
												</div>

												<div class="col-sm-6 p-b-5">
													<label class="stext-102 cl3" for="email">Email</label>
													<input class="size-111 bor8 stext-102 cl2 p-lr-20" id="email" type="text" name="email">
												</div>
											</div>

											<button class="flex-c-m stext-101 cl0 size-112 bg7 bor11 hov-btn3 p-lr-15 trans-04 m-b-10">
												Submit
											</button>
										</form>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="bg6 flex-c-m flex-w size-302 m-t-73 p-tb-15">
			<span class="stext-107 cl6 p-lr-25">
				SKU: JAK-01
			</span>

			<span class="stext-107 cl6 p-lr-25">
				@Model.Product.TbCatagory.Name
			</span>
		</div>
</section>



<!-- Related Products -->
<section class="bg0 p-t-23 p-b-140">
	<div class="container">
		<div class="p-b-10">
			<h3 class="ltext-103 cl5">
				Related Products
			</h3>
		</div>
		<hr />
		<div class="row isotope-grid">
			@foreach (var item in Model.RelatedProducts)
			{
				<a href="/Customer/Home/Details/@item.Id">
					<div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
						<div class="block2">
							<div class="block2-pic hov-img0 position-relative">
								@if (item.Stock == 0)
								{
									<div class="badge outofstock">
										<p>OUT OF STOCK</p>
									</div>
								}
								else if (item.OfferPrice != 0)
								{
									<div class="badge offer">Offer</div>
								}
								<img src="~/@item.ProductImages.First().ImagePath" alt="IMG-PRODUCT" class="product-image">
								<a href="#" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1">
									Quick View
								</a>
							</div>
							<div class="block2-txt flex-w flex-t p-t-14">
								<div class="block2-txt-child1 flex-col-l">
									<a href="/Customer/Home/Details/@item.Id" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
										@item.Name
									</a>
									@if (item.OfferPrice != 0)
									{
										<span class="stext-105 cl3">
											EGP <del>@item.Price</del>
										</span>
										<span class="stext-105 cl3">
											EGP @item.OfferPrice
										</span>
									}
									else
									{
										<span class="stext-105 cl3">
											EGP @item.Price
										</span>
									}
								</div>
								<div class="block2-txt-child2 flex-r p-t-3">
									<a href="/Customer/Home/AddWishList/@item.Id" class="pos-relative">
										@await Component.InvokeAsync("Love", new { wishid = @item.Id })
									</a>
								</div>
							</div>
						</div>
					</div>
				</a>
			}
		</div>



		<!-- Load more -->
		<div class="flex-c-m flex-w w-full p-t-45">
			@Html.PagedListPager((IPagedList)Model.RelatedProducts, page => Url.Action("Index", new { page = page }),
							new PagedListRenderOptions
			{
				LiElementClasses = new string[] { "page-item" },
				PageClasses = new string[] { "page-link" }
			})
		</div>
	</div>
</section>
<style>
	.block2 {
		height: 100%;
	}

	.block2-pic {
		position: relative;
		display: inline-block;
		width: 100%;
		height: 320px;
		overflow: hidden;
	}

	.product-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.badge {
		position: absolute;
		top: 10px;
		right: 10px;
		background-color: #f74877;
		color: white;
		padding: 5px 10px;
		font-size: 12px;
		font-weight: bold;
		border-radius: 5px;
	}

	.outofstock {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: rgba(255, 255, 255, 0.7);
		padding: 10px 20px;
		z-index: 1;
		display: block;
		width: 100%;
	}

		.outofstock p {
			color: #000;
			font-size: 20px;
			font-weight: bold;
			text-align: center;
		}

	.badge.offer {
		top: 10px;
		right: 10px;
		background-color: #f74877;
		color: white;
		padding: 5px 10px;
		font-size: 12px;
		font-weight: bold;
		border-radius: 5px;
	}

</style>

@section Scripts {
	<script>
		function submitForm(event) {
			event.preventDefault();

			// Get the select elements
			const sizeSelect = document.getElementById('selectSize');
			const colorSelect = document.getElementById('selectColor');

			// Get the selected option text
			const selectedSizeText = sizeSelect.options[sizeSelect.selectedIndex].text;
			const selectedColorText = colorSelect.options[colorSelect.selectedIndex].text;

			// Get the product count
			const productCount = document.querySelector('.num-product').value;

			// Validation checks
			if (sizeSelect.value === "") {
				Swal.fire({
					icon: 'error',
					title: 'Error',
					text: 'Please select a size before adding to cart.'
				});
				return;
			}

			if (colorSelect.value === "") {
				Swal.fire({
					icon: 'error',
					title: 'Error',
					text: 'Please select a color before adding to cart.'
				});
				return;
			}

			// Set hidden input values to the selected option text
			document.getElementById('SelectedSize').value = selectedSizeText;
			document.getElementById('SelectedColor').value = selectedColorText;
			document.getElementById('ProductCount').value = productCount;

			// Submit the form
			document.getElementById('Details').submit();
		}

	</script>

}
